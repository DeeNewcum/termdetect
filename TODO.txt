
- for terminal entries that don't match up exactly with the $TERM names in the ncurses terminfo,
  we need a way to specify which "fallback" $TERM setting to use, that *does* match ncuses terminfo


- m_c1 causes problems across several terminals  (Putty, SecureCRT, probably more):

    - I suspect one problem is that C1-CSI is encoded as 9B in most non-UTF8 encodings, and 
      is encoded as  C2 9B  in UTF8.  At the very least, we should change m_c1 to s_c1, and
      have s_c1 try BOTH possible ways to encode it, and return the boolean-OR result of the two.



- possibly calculate the s_window_size in other ways:
        - Term::ReadKey::GetTerminalSize()
        - see "TIOCGWINSZ" in the source for IO::Tty
        - `stty size`



==== small or medium problems with specific terminals ====

- with rxvt-unicode, there is uningested data that gets dumped out at the command-line afterwards...
  we need to figure out what's going on here

        - it appears to be happening on the 'm_sub' test


- with rxvt-unicode, the encoding tests fail to detect that it's utf8 -- all test fail, with the
  incorrect result  X+0 Y+0   (so far, all the ones I have should be X+1)


- in Putty, the tests turn off the cursor, even when --nose is used.  We need to find the offending
  test, and disable it under --nose.




==== random stuff ====

- could we test against DOS's ANSI.SYS?  This is mostly for homorous value, it's not really useful
  at all.  But ANSI.SYS *does* support the \e[6n (Device Status Report -- Cursor), so this code
  *should* mostly work.     http://helppc.netcore2k.net/misc/ansi-codes
        http://sshwindows.webheat.co.uk/display/sshwindows/OpenSSH+for+Windows


