Things to do in preparation for a release:

################################################################################
#################################[ v0.11 ]######################################
################################################################################

    - rewrite README.md to be much more end-user oriented...
            - show how to install the latest-greatest terminfo.src from ncurses, just in their home directory
            - strongly encourage them to do that ^^^

    - EAT YOUR OWN DOG FOOD

        - have some sort of fallback mechanism to try progressively less-precise apprxoimations of
          the suggested $TERM setting,   falling back whenever the current system doesn't support
          a particular $TERM

                - while we strongly suggest that the user install the full ncurses terminfo, this is
                  something that many users may not want to do (at least not right away), so we shouldn't
                  make it mandatory

        - change the 'termdetect -t' argument to be 'termdetect -e' (for "env"), 
            and have it include a setting for $LANG

                    - but ONLY if the character coding was detected -- trying to make a new locale is...
                      complicated enough that it'll have to wait until the next release

                    - I don't know if  Encode::Locale  could help with this at all?

    - on release:

        - distribute it somewhat widely:
                - post it on Facebook
                - post it on reddit.com/r/commandline
                - email Eads
                - email Bec


################################################################################
#################################[ v0.12 ]######################################
################################################################################

- try to address some of the "variance" issues

- modularity

    - pull the lower-level I/O routines out of Termdetect_Tests.pm, put them in their own module, 
            and then integrate that into many more scripts, to fix all the DRY problems where 
            read_ansi_reply() and run_test() have been copy-n-pasted in several different files

                - this may also solve the weird Export problems in Termdetect_Encoding.pm

    - it would be nice if the I/O routines could be toggled between async and synchronous, from
            code outside the module, rather than hard-coded and requiring manual editing to toggle


- find an install of Perl v5.6.2 to test this against, to see if it will run even on old Perls
            (building it via PerlBrew has failed on two of my machines so far)

- add more terminals to the termmatch database, particularly some OS/X ones

- see if I can detect more character encodings

- if we generate a locale that doesn't yet exist locally  (ie. it's in `locale -m` but not `locale -a`),
  then use either localedef(1) or locale-gen(1) to create one
        - creating locales is...  kind of complicated :|
            http://serverfault.com/questions/274163/select-locales-on-ubuntu-10-04-after-installation#answer-274194

