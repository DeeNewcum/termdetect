Things to do in preparation for a release:

################################################################################
#################################[ v0.11 ]######################################
################################################################################

- EAT YOUR OWN DOG FOOD

- move this bug elsewhere:
    - set the number of colors correctly...   we *shouldn't* hard-code 256 colors in 
        ~/.vimrc, because that breaks when we don't have 256 colors
        (eg. in Linux Console [16] or urxvt [88])

                - terminfo.ncurses doesn't have a 256 variant for:
                        - SecureCRT
                        - tmux      (which terminfo.ncurses reads as "xterm-new")

- make it easier to install, per many suggestions:  http://stackoverflow.com/questions/95710

    - when searching for termmatch.src, have the last location be included in the fatpack bundle
            - figure out a way to bundle it in the fatpack file
            - note in the manual that if the user wants to modify the database, they should
              download a copy, and modify that....  just adding overrides in ~/.termmatch.src isn't enough

    - is there any way to make terminfo installation easier?

            - have termdetect be able to do it, itself?  (only when requested, of course)


- on release:

    - distribute it somewhat widely:
            - post it on Freshmeat
            - post it on http://opencode.us/
            - post it on Facebook
            - post it on reddit.com/r/commandline
            - email Eads
            - email Bec
            - email the person that made ncurses, ask them if they know of anybody who would
              find this useful
            - more ideas:
                    - http://stackoverflow.com/questions/95710/how-do-you-promote-advertise-evangelize-your-open-source-project
                    - http://gsoc-wiki.osuosl.org/index.php/Promoting_Your_Open_Source_Project
                    - listen to Tribes by Seth Godin    http://stackoverflow.com/questions/95710/how-do-you-promote-advertise-evangelize-your-open-source-project/441859#441859
                    - ask Eads how to get a few initial eyeballs


################################################################################
#################################[ v0.12 ]######################################
################################################################################

- change the 'termdetect -t' argument to be 'termdetect -e' (for "env"), 
    and have it include a setting for $LANG

            - but ONLY if the character coding was detected -- trying to make a new locale is...
              complicated enough that it'll have to wait until the next release

            - I don't know if  Encode::Locale  could help with this at all?

            - add a good example to README.md of how to integrate termdetect into
              .vimrc


################################################################################
#################################[ v0.13 ]######################################
################################################################################

- add the ability to have "suffixes" on terminal names
    - these suffixes would be entirely confined to termdetect; once the terminal was going
      to be used for terminfo, the suffix would be removed
    - the suffix is only to keep track of unique termmatch entries (eg. because of version variations),
      but for which those minor differences ONLY matter to termdetect, and don't matter to terminfo
    - one example where we need this already is  screen_4.00.02  vs  screen_4.00.03jw4,
      where the terminfo entry is just   screen
            - note: terminfo.ncurses already does this...  it uses the "+" character for internal-only purposes

- improve the contents of t/
        (see t/TODO.txt)

- try to address some of the "variance" issues
    see TODO_variance.txt

- try to address some of the "ambiguous" issues
    see TODO_ambiguous.txt

- find an install of Perl v5.6.2 to test this against, to see if it will run even on old Perls
            (building it via PerlBrew has failed on two of my machines so far)

- add more terminals to the termmatch database, particularly some OS/X ones

- see if I can detect more character encodings

- if we generate a locale that doesn't yet exist locally  (ie. it's in `locale -m` but not `locale -a`),
  then use either localedef(1) or locale-gen(1) to create one
        - creating locales is...  kind of complicated :|
            http://serverfault.com/questions/274163/select-locales-on-ubuntu-10-04-after-installation#answer-274194

