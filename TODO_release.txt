Things to do in preparation for a release:

################################################################################
##############################[ alpha release ]#################################
################################################################################

The goal of this is to get some possible feedback about the use-cases.

    - maybe....  get at least two encodings to be detected?  That would give me a smidgin more
      confidence
        
            - now that 'placeholder_width' has been written...  modify it to display characters for
              specific encodings:  utf8, gb2312, and shiftjis...    We SHOULD be able to discern
              these encodings now, but 'placeholder_width' will confirm this for us

    - implement the --parcel flag, that generates a td_parcel.txt file, to make it easy for
      people to email me data

    - change the 'termdetect -t' argument to be 'termdetect -e' (for "env"), 
        and have it include a setting for $LANG

                - but ONLY if the character coding was detected -- trying to make a new locale is...
                  complicated enough that it'll have to wait until the next release

    - release a fatpacked version   (using src/Makefile)

    - distribute it somewhat widely:
            - post it on Facebook
            - email Eads
            - email Bec


################################################################################
##############################[ beta release ]##################################
################################################################################

- find an install of Perl v5.6.2 to test this against, to see if it will run even on old Perls
            (building it via PerlBrew has failed on two of my machines so far)

- add more terminals to the termmatch database, particularly some OS/X ones

- see if I can detect more character encodings

- if we generate a locale that doesn't yet exist locally  (ie. it's in `locale -m` but not `locale -a`),
  then use either localedef(1) or locale-gen(1) to create one
        - creating locales is...  kind of complicated :|
            http://serverfault.com/questions/274163/select-locales-on-ubuntu-10-04-after-installation#answer-274194

- try to address some of the "variance" issues
