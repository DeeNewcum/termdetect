Things to do in preparation for a release:

################################################################################
#################################[ v0.11 ]######################################
################################################################################

- promotion
    - transfer main page to gh-pages, so that we can do Google Analytics on it

    - create a list of terminal-emulators that we currently support
            - SEE?  A way to ignore suffixes and produce a list of canonical names might be really
              handy.

- on release:

    - distribute it somewhat widely:
            - post it to reddit.com/r/ScriptSwap
            - post it here:  http://serverfault.com/questions/350401/detect-terminal-type-with-tput
            - post it on Facebook
            - post it on reddit.com/r/commandline
            - post it on Freecode  (formerly Freshmeat)
            - post it on Ohloh
            - post it to Softpedia
            - post it on http://opencode.us/
            - post it on PerlMonks
            - email Eads
            - email Bec
            - email the person that made ncurses, ask them if they know of anybody who would
              find this useful
            - post it as a CPAN module
            - talk about it at local user groups
                - Pumping Station: One
                - FreeGeek Chicago
            - more ideas:
                    - http://stackoverflow.com/questions/95710/how-do-you-promote-advertise-evangelize-your-open-source-project
                    - http://gsoc-wiki.osuosl.org/index.php/Promoting_Your_Open_Source_Project
                    - listen to Tribes by Seth Godin    http://stackoverflow.com/questions/95710/how-do-you-promote-advertise-evangelize-your-open-source-project/441859#441859
                    - ask Eads how to get a few initial eyeballs

    - create a PPA install package for it, as a preliminary step towards getting a .deb integrated
      into Ubuntu and/or Debian

################################################################################
#################################[ v0.12 ]######################################
################################################################################

(context:  this would be the final version before letting the project simmer for a bit)

- if we're going to let the project simmer unattended for a while, it may be good to make a decision
        about whether to use internal canonical names
                (and ignorable suffixes)

- change the 'termdetect -t' argument to be 'termdetect -e' (for "env"), 
    and have it include a setting for $LANG

            - but ONLY if the character coding was detected -- trying to make a new locale is...
              complicated enough that it'll have to wait until the next release

            - I don't know if  Encode::Locale  could help with this at all?

            - add a good example to README.md of how to integrate termdetect into
              .vimrc


- record a screencast of termdetect working on various terminals, and after each is started,
    the user displaying the auto-detected $TERM and $LANG


################################################################################
#################################[ v0.13 ]######################################
################################################################################

- boot up an AWS AMI image of FreeBSD, and test it on that
        http://www.daemonology.net/freebsd-on-ec2/

- auto-detect the terminfo available  (eg. "ncurses", "ESR", "solaris", "os/x", etc)
    - then change fingerprints.src:
            - remove fallback=
            - replace it with TERM=
            - most entries in TERM= should have a prefix indicating that they should only match
              if the specific terminfo is detected
    - change the top-line name to be a "canonical name"
    - change the documentation to say "termdetect works best with ncurses' terminfo, but it will
                        work acceptably with others"

- point out in the manual or somewhere that if the user wants to customize fingerprints.src,
    they have to download their own copy and modify that, rather than starting with a blank file

- find a version of FreeBSD to test this on

- [usability/polish]  sporadic failures happen when the user types something exactly when
            termdetect is running.  While this happens maybe 0.5 - 1.0% of the time, it would
            be good to deal with this in a better way.

                    - if we can't recover, we should at the bare minimum print a one-line
                      warning on STDERR    (so that when they see this while .bashrc is running,
                      they at least get the heads-up ASAP that they should log back in)

                    - see Github Issue #3 for thoughts on possible ways to recover

- (maybe)  add a CHANGES file, akin to this project:
            http://cwrapper.sourceforge.net/


################################################################################
#################################[ v0.14 ]######################################
################################################################################

- integrate the termping functionality directly into termdetect --ping.  The reasoning for this:
        1. the more info we pack into the default screen, the more impressive this program is
        2. we want the program to be as easy to install as possible, and having two separate
           programs makes it much harder to install

- should we create a slightly more streamlined way to install the terminfo file, other
    than the mktemp/.../rm method that's currently suggested?

- add the ability to have "suffixes" on terminal names
    - these suffixes would be entirely confined to termdetect; once the terminal was going
      to be used for terminfo, the suffix would be removed
    - the suffix is only to keep track of unique fingerprint_db entries (eg. because of version variations),
      but for which those minor differences ONLY matter to termdetect, and don't matter to terminfo
    - one example where we need this already is  screen_4.00.02  vs  screen_4.00.03jw4,
      where the terminfo entry is just   screen
            - note: terminfo.ncurses already does this...  it uses the "+" character for internal-only purposes

- improve the contents of t/
        (see t/TODO.txt)

- try to address some of the "variance" issues
    see TODO_variance.txt

- try to address some of the "ambiguous" issues
    see TODO_ambiguous.txt

- find an install of Perl v5.6.2 to test this against, to see if it will run even on old Perls
            (building it via PerlBrew has failed on two of my machines so far)

- add more terminals to the fingerprint_db database

- see if I can detect more character encodings

- if we generate a locale that doesn't yet exist locally  (ie. it's in `locale -m` but not `locale -a`),
  then use either localedef(1) or locale-gen(1) to create one
        - creating locales is...  kind of complicated :|
            http://serverfault.com/questions/274163/select-locales-on-ubuntu-10-04-after-installation#answer-274194

- on release:
    - consider learning how to make it available as a Debian package:
            http://www.debian.org/doc/manuals/maint-guide/
            http://www.debian.org/devel/join/newmaint
            http://www.debian.org/doc/debian-policy/
